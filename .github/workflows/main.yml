name: CI/CD Pipeline for AKS and ACR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Azure CLI install
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Log in to Azure with Managed Identity
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AKS_MANAGED_IDENTITY_CLIENT_ID }}  # Managed Identity's Client ID
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}  # Your Azure Tenant ID
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Log in to Azure Container Registry
      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Build and push Docker image 1
      - name: Build and push frontend container image
        run: |
          docker build -f frontend/Dockerfile -t ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest ./frontend
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest

      # Build and push Docker image 2
      - name: Build and push backend container image
        run: |
          docker build -f backend/Dockerfile -t ${{ secrets.ACR_NAME }}.azurecr.io/backend:latest ./backend
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/backend:latest

  deploy_to_aks:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name capstoneaks

      # Deploy the frontend to AKS
      - name: Deploy Frontend to AKS
        run: |
          kubectl apply -f k8s/frontend_deployment.yaml
          kubectl rollout restart deployment/frontend

      # Deploy the backend to AKS
      - name: Deploy Backend to AKS
        run: |
          kubectl apply -f k8s/backend_deployment.yaml
          kubectl rollout restart deployment/backend

      - name: Verify Deployment
        run: |
          kubectl get pods


